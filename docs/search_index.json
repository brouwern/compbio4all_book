[["index.html", "Computational Biology for All! Preface", " Computational Biology for All! Nathan L. BRouwer 2021-08-15 Preface Predface In Book 1 I’ll introduce why the role of computers in biology is important and lay out the scope of this book. I’ll also walk through the basic steps of getting R and RStudio up and running on your computer, walk through a basic R session, and discuss the various ways we’ll interact with R using code and script files. I’ll also introduce rmarkdown, a way of integrating the R code of scripts with basic capabilities of word processing and web development. Scripts organized in rmarkdown are a handy way to organize and annotate code, store and disseminate your work, and structure your analyses and data presentations so that the computations behind them are fully reproducible. "],["intro.html", "Chapter 1 Welcome to computational biology for all! 1.1 R and RStudio - your new best friends! 1.2 How to use this book - be an active learner! 1.3 Biological scope of this book", " Chapter 1 Welcome to computational biology for all! Welcome to Computational Biology for All!. This book will introduce you to key concepts of computational biology using the software R. It covers such topics as statistics, data science, bioinformatics, building phylogenetic trees, and building computer models of biological processes. I will make only two assumptions in this book: You are interested in biology and need a computer to answer a question You’ve had some college-level biology or are willing to read some basic background information in the book, the appendices or the internet. That’s it. If you’ve forgotten how many amino acids are specified by the genetic code (or never learned; its 20), have never run computer code, or aren’t sure what “computational biology” is no worries. We’ll work through everything step by step, review often, and link to additional resources. 1.1 R and RStudio - your new best friends! R is one of the major computer languages used by scientists. “R” refers both to the computer language itself, and to the base software which runs the computer code for us. Most people write and run their code in a special program that acts like a word processor for coding; these goes by the fancy name Integrated Development Environments or IDEs. In this book we’ll use the popular IDE software called RStudio. You should get access to the software combination of the software R and RStudio(()) either on the cloud via an account with (RStudio Cloud)[https://rstudio.cloud/] or on your own hard drive. (Some institutions may have their own special implementation of R and RStudio; ask your tech support about this.) If your are brand-new to using R the easiest way to get started is using RStudio Cloud. Getting R and RStudio set up on your own computer isn’t (usually) difficult, but RStudio Cloud even easier. For information on R, RStudio, and RStudio Cloud see the Appendices. There are also many videos on the internet walking you through these topics. If I’ve already lost you a bit with any of this information don’t worry - we’ll cover more details in the following chapters, and the Appendices cover how to get start with R, RStudio, and RStudio step-by-step. 1.2 How to use this book - be an active learner! While you can read this as a regular book, it is meant to be an active learning text. That means you’ll get much more out of it if you are working through all the code step by step. There are two ways to do this: Read the book like a book (printed, PDF, website) and type the code in RStudio. Download the associated Active Learning Notebooks and work through them in RStudio. The Active Learning Notebooks contain ALL of the text and code, and is the recommended way to experience the book. 1.3 Biological scope of this book “Computational Biology” means different things to different people, and I’ll discuss how it can be defined in a later chapter. In general, though, I’ll apply a very broad definition and touch upon all aspects of biology, from biochemistry to ecology. My starting point will generally by the topics classically associated with computational biology: bioinformatics, genomics, and building phylogenetic trees. Moreover, when I cover other topics like population dynamics or community ecology I’ll often use molecular-biology related examples, such as population growth of transposons in our genomes and community diversity of bacteria in our guts (the so-called gut microbiome, which is studied using molecular sequencing technologies). If you’re primary interest is in ecology everything in this book will be applicable at the very least in terms of the techniques, and hopefully it will help everyone expand their idea of how ecological concepts can be applied. "],["what-is-computational-biology.html", "Chapter 2 What is Computational Biology? 2.1 Notes 2.2 Luscombe et al 2001 2.3 Taprich et al 20121 2.4 Smith 2015 Frontiers in Genetics 2.5 Good readings / references 2.6 Potential references 2.7 Original info, from Eco Data Science project 2.8 What is data science? 2.9 Refereces 2.10 Bibliography", " Chapter 2 What is Computational Biology? This is mostly notes. 2.1 Notes 2.1.1 NIH definition See file NIH_def_bioinfo_2000.rmd for full text of the NIH document NOTES: bioinformatics relevant to all life sciences (not just biology) Bioinf/comp bio both “rooted” in life science, comp sci, info sci and technologies Bioinformatics: application focused, access / understanding from data Comp bio: theory/discovery approaches Bioinformatics: Research, development, or application of computational tools and approaches for expanding the use of biological, medical, behavioral or health data, including those to acquire, store, organize, archive, analyze, or visualize such data. Computational Biology: The development and application of data-analytical and theoretical methods, mathematical modeling and computational simulation techniques to the study of biological, behavioral, and social systems 2.2 Luscombe et al 2001 N.M. Luscombe, D. Greenbaum, M. Gerstein. Bioinformatics definition committee. 2001. What is Bioinformatics? A Proposed Definition and Overview of the Field https://www.thieme-connect.com/products/ejournals/abstract/10.1055/s-0038-1634431 “Our definition is as follows: Bioinformatics is conceptualizing biology in terms of macromolecules (in the sense of physical-chemistry) and then applying “informatics” techniques (derived from disciplines such as applied maths, computer science, and statistics) to understand and organize the information associated with these molecules, on a large-scale.” Luscombe et al 2000 “Analyses in bioinformatics predominantly focus on three types of large datasets available in molecular biology: macromolecular structures, genome sequences, and the results of functional genomics experiments (eg expression data). Additional information includes the text of scientific papers and “relationship data” from metabolic pathways, taxonomy trees, and protein-protein interaction networks.” Luscombe et al 2000 2.3 Taprich et al 20121 Taprich et al. 2021. An instructional definition and assessment rubric for bioinformatics instruction. https://iubmb.onlinelibrary.wiley.com/doi/full/10.1002/bmb.21361 “An interdisciplinary field that is concerned with the development and application of algorithms that analyze biological data to investigate the structure and function of biological polymers and their relationships to living systems.” 2.4 Smith 2015 Frontiers in Genetics Smith. 2015. Broadening the definition of a bioinformatician. Frontiers in Genetics https://www.frontiersin.org/articles/10.3389/fgene.2015.00258/full “On a given day, I spend much of my research time staring at nucleotide sequences on a computer screen and theorizing about the evolution of genomes; thus, I feel comfortable calling myself a bioinformatician, or at the very least a scientist who primarily uses bioinformatics for his research. If asked, most of my colleagues, mentors, and students would also define me as a bioinformatician. But there is one small catch: I don’t know how to program computer software or curate databases, and I am even quite pathetic at writing UNIX commands, which according to some precludes me from having the title of bioinformatician.” Smith (2015) “I imagine that many of the scientists reading this essay will consider me an imposter, an amateur who points, clicks, and stumbles his way through the complicated landscape of bioinformatics. … I believe that as a research community we need to broaden our definition of what it means to be a bioinformatician, not restricting it to only those who develop software or design and maintain data resources. … [T]he term bioinformatician should encompass the countless and ever growing number of scientists who use computers and bioinformatics programs to address fundamental questions in biology.” Smith (2015) 2.5 Good readings / references Koonin, EV. 20xx. Primer: Computational genomics. Current Biology - Magazine. R155-158… 2.6 Potential references https://asistdl.onlinelibrary.wiley.com/doi/full/10.1002/asi.20133?casa_token=iDFXKee8e1gAAAAA%3AD7vtxphVMi2MHDEIvWi7Y3twQcKUvdI5Co3pF11-OgoTdk1dEHe8H5XKv67mnz1uyGyFRoMeqrbeY_Q https://www.geneticsmr.com/sites/default/files/articles/year2017/vol16-1/pdf/gmr-16-01-gmr.16019645_0.pdf https://ieeexplore.ieee.org/abstract/document/1678036?casa_token=H9KSAnKN-XIAAAAA:R_uzPueqLDOCWccNZgdRkaRxpOo3J2RSMpVG7ZLAebTVp0-tqGl0TKQderfudEOS2efgl9oWVw https://dl.acm.org/doi/abs/10.1145/1031120.1031122?casa_token=YBJzo0bknd8AAAAA:tzp2T3uGqb1MXRPtSccpKXAyKqtmTORa6B_yWGA9dQ9Pj4UElgeH8LK0hVJ_2PaAF51I3oqY8N-EkA 2.7 Original info, from Eco Data Science project [NOTE: This section is currently under development. The paper by Touchon &amp; McCoy (2016) and its references lay out many of the reasons for the statistical focus of this book and relates to all biology, not just ecology.] “Ecological questions and data are becoming increasingly complex and as a result we are seeing the development and proliferation of sophisticated statistical approaches in the ecological literature. … It is no longer sufficient to only ask ‘whether’ or ‘which’ experimental manipulations significantly deviate from null expectations. Instead, we are moving toward parameter estimation and asking ‘how much’ and in ‘what direction’ ecological processes are affected by different mechanisms” (Touchon &amp; McCoy 2016, Ecosphere, emphsis mine) “Spreadsheets are often used as the basis of data collection and education; but this is potentially problematic since spreadsheets typically do not promote good data management practices…. The features of spreadsheets that make them desirable for the average researcher, such as extensibility, use of formatting for organization, embedding charts, make them undesirable for preparing data for long‐term archiving and reuse.”(Strasser &amp; Hampton 2012 Ecosphere) 2.8 What is data science? Data analysis include “procedures for analyzing data, techniques for interpreting the results…, ways of planning the gathering of data to make its analysis easier, more precise or more accurate, and all the machinery and results of (mathematical) statistics which apply to analyzing data.” John Tukey, “The future of data analysis”, Annals of Mathematical Statistics, 1962. People argue about what data science is What Tukey calls “data analysis” is now termed “data science” by many. Some define data science as closely allied with computer science and want its use most closely associated with things like “big data”, data mining, machine learning, and artificial intelligence. Others, such as RStudio’s Hadley Whickham (creator of ggplot2, dplyr, and most of the infrasture of the tidyverse of R package) define it more broadly to involve all aspects of the life cycle of data. (Wickham also defines a data scientists as “A data scientist is a statistician who is wearing a bow tie” https://twitter.com/hadleywickham/status/906146116412039169?lang=en) 2.9 Refereces Strasser &amp; Hampton 2012. The fractured lab notebook: undergraduates and ecological data management training in the United States. EcoSphere. https://esajournals.onlinelibrary.wiley.com/doi/abs/10.1890/ES12-00139.1 Touchon &amp; McCoy 2017. The mismatch between current statistical practice and doctoral training in ecology. EcoSphere. https://esajournals.onlinelibrary.wiley.com/doi/abs/10.1002/ecs2.1394 Tukey. 1962. The future of data analysis. Annals of Mathematical Statistics. https://www.jstor.org/stable/2237638 2.10 Bibliography Relevant papers cited by Touchon &amp; McOy 2017. Barraquand, F., T. H. G. Ezard, P. S. Jørgensen, N. Zimmerman, S. Chamberlain, R. Salguero‐Gómez, T. J. Curran, and T. Poisot. 2014. Lack of quantitative training among early‐career ecologists: a survey of the problem and potential solutions. PeerJ 2:e285. Butcher, J. A., J. E. Groce, C. M. Lituma, M. C. Cocimano, Y. Sánchez‐Johnson, A. J. Campomizzi, T. L. Pope, K. S. Reyna, and A. C. S. Knipps. 2007. Persistent controversy in statistical approaches in wildlife sciences: a perspective of students. Journal of Wildlife Management 71:2142–2144 Ellison, A. M., and B. Dennis. 2009. Paths to statistical fluency for ecologists. Frontiers in Ecology and the Environment 8:362–370. Germano, J. D. 2000. Ecology, statistics, and the art of misdiagnosis: the need for a paradigm shift. Environmental Reviews 7:167–190. Quinn, J. F., and A. E. Dunham. 1983. On hypothesis testing in ecology and evolution. American Naturalist 122:602–617. "],["how-will-this-book-teach-computational-biology.html", "Chapter 3 How will this book teach computational biology? 3.1 What you’ll learn 3.2 Teaching approach 3.3 Requirements 3.4 What’s not in this book / course", " Chapter 3 How will this book teach computational biology? “The rise of computer programming, computational power, and modern statistical approaches may…” allow “…scientists to ask new questions and to extract more information from data than ever before.” (Touchon &amp; McCoy 2016, Ecosphere) 3.1 What you’ll learn 3.1.1 General skills that you’ll learn Statistical computing using R, RStudio, and rmarkdown Data analysis, from t-tests to mixed models in R Data visualization, with an emphasis on ggplot2 Data science, from data management best practices to data cleaning with dplyr Computational reproducibility, from formatting scripts to using rmarkdown to write reproducible reports 3.1.2 Computational biology skills you’ll learn Working with sequence data alignments Phylogenetics … 3.2 Teaching approach Always explore and visualize data Step-by-step instructions Frequently refreshing and review Comprehensive and self-contained Worked example “Modify this code” tasks Code completion tasks (key steps missing) Broken code tasks (fix non-functional code) Links to Jupyter notebooks (not yet implemented) “Active Learning Notebooks” - all content and code in .Rmd format 3.3 Requirements R RStudio External packages loaded via RStudio 3.4 What’s not in this book / course "],["what-is-r-and-why-use-it.html", "Chapter 4 What is R and why use it? 4.1 How do we typically use software in science? 4.2 What does R do? 4.3 Why use R 4.4 Who uses it? 4.5 R and computational reproducibility 4.6 Alternatives to R", " Chapter 4 What is R and why use it? [these notes are from a lecture and have not been re-written much yet] R is a powerful piece of software used for data science and data analysis. In this chapter I will briefly introduce the advantages of using R, why you might want to learn it, and also indicate some alternatives and adjuncts you could consider. 4.1 How do we typically use software in science? Most scientists rely on both general and specialized pieces of software for various parts of their work. For data entry they likely use spreadsheet software Excel, though increasingly Google Sheets. For data analysis they might use one of many options, such as GraphPad Prism, Minitab, SAS, SPSS, or STATA. For making plots, many people will export their export their results back to Excel, while others use specialized software like SigmaPlot. Many scientists also use specialized programs; in ecology many researchers do GIS in ArcGIS or QGIS, mark-recapture analysis in Program MARK or Distance, use RAMAS or Vortex for population viability analysis, or build custom mathematical programs in MatLab or Python. If they do multivariate statistics like [ordination](https://en.wikipedia.org/wiki/Ordination_(statistics) the may use a specialized stats program like PC-ORD. Since software can be expensive, some scientists will rely on Excel for all of their work. Excel can do many things, but it can’t do everything all the specialized types of software can do. Moreover, its very limited in the range of statistics it can do and graphs it can make. 4.2 What does R do? R is amazing because it has been explicitly developed to do several things very well, particularly statistics, math, making great-looking figures, and writing computer programs to automate these tasks. Additionally, R has been extended by developers to be able to be a powerful tool for data cleaning and organization, to be used as a GIS, and as an integrated word processor and website make for publishing work. 4.3 Why use R In addition to is many capabilities, R has the advantage this it is free anyone, always used by statisticians to develop new statistical techniques, so new techniques often come out 1st in R used by almost all ecological statisticians to develop new techniques (mark recapture, distance sampling) 4.4 Who uses it? R continues to increase in popularity. Among data scientists it is second only to Python. Among academics it has eclipsed SAS in many fields. It is also used by analyses in many large companies, such Facebook, and by journalists looking for stories in or reporting on large volumes of data see http://blog.revolutionanalytics.com/2014/05/companies-using-r-in-2014.html for further discussion. 4.5 R and computational reproducibility One factor potentially contributing to R’s popularity, or at least a major bonus for using it, is ease of use for making analyses reproducible. All commands in R are typed out and the best way to do this is in a static script file from which you send commands to R to execute. This creates a record of your analyses. This feature is shared by other programs such as SAS and Stats, and other programming languages such as Matlab and Python. The advantage of R is that the script files are simply plain text files which anyone can open and - if they’ve downloaded R, which is free - they can run. Developers have also created numerous tools for creating reproducible analysis workflows and which allow R to be used in all data-related aspects of a project, from data cleaning to formatting journal submissions. What this means is that without become an expert programmer you can set up your work so that you can re-run all of your data cleaning, analyses, and graph building with a single command in R. This makes what you’ve done auditable, transparent, and easy to re-use for future work. 4.6 Alternatives to R R has many advantages, but it has one critical issue: the learning curve. R is a command-line driven analysis tool, which means you type out specific commands for almost everything single thing R does. Excel is pretty user friendly, and several stats programs similarly use point-and-click interfaces, such as SPSS, JMP, and Stata SAS also requires a lot of command writing, but is generally consider more user friendly than R. Recently, two free point-and-click statistical analysis programs have been release that are built on R but require no programming. JASP (“Just another statistics program”) has an emphasis on Bayesian statistics, particularly Bayesian hypothesis testing using Bayes factors (an approach increasing in popularity, especially in psychology, but which some Bayesians, like Andrew Gelman, disavow). While JASP is based on R, it does not currently allow access to the underlying R code. Jamovi has a similar spirit as JASP (indeed, it was founded by developers who had worked on JASP) but is more transparent about the underlying R code being used to run the analysis. "],["the-layout-of-rstudio.html", "Chapter 5 The layout of RStudio 5.1 RStudio (Desktop or Cloud) 5.2 R emulators 5.3 Other ways 5.4 RStudio at a glance", " Chapter 5 The layout of RStudio To move forward with this book you need to get access to R. There are several ways to do this, and if you are participating in a class your instructor may have a favored way to do it. 5.1 RStudio (Desktop or Cloud) There are two primary ways to use R relevant to this book: Create an account at RStudio Cloud. This is the easiest way to get started; you get 15 hours per month free which is enough for you to get your bearings. Complete instructions for doing this are available in the appendices. Note that RStudio Cloud and RStudio are essentially identical and so all instructions related to RStudio are relevant to RStudio cloud. Download R AND RStudio desktop. Key here is that you need TWO pieces of software, R and RStudio. Complete instructions are in the appendices. These two methods are essentially equivalent. To jump in and get started I recommend RStudio cloud. See the appendices for step by step instructions. 5.2 R emulators There are also two other ways of using R which we’ll occasionally use. I mention them here briefly. They essentially emulate the R experience but eliminate the hairy details. Shiny Apps: These are independent mini-programs that allow you to explore or carryout some aspect of R functionality without doing any coding. They typically live on the internet, but can also be brought up from RStudio desktop. An example of a simple Shiny App on the internet is here: https://shiny.rstudio.com/gallery/faithful.html. learnr tutorials: These are interactive tutorials where you do basic coding in your web browser. Here’s an example: https://learnr-examples.shinyapps.io/ex-data-filter/ 5.3 Other ways Two other ways you may encounter R Use a Jupyter notebook: Jupyter notebooks are an advanced R emulator. They are really cool, allowing you to essentially combine text (like a tutorial) with code that can be run within a web browser. Use regular old R: When you download R an icon will appear on your desktop. You can access old-school R that way, but almost no one ever does. For a bit more information about this see the appendix. 5.4 RStudio at a glance Now we’ll get started with RStudio. We’ll get to know what it looks like and configure it a bit for out needs. If you are using RStudio desktop the RStudio logo looks like this: (#fig:rstudio.logo)The RStudio logo Whether on the Cloud or Desktop, when you open up you’ll be greeted by a fairly busy array of menus and things. Don’t panic! A typical fresh starting point in RStudio/RStudio Cloud is shown in Figure 2. (#fig:rstudio.open)RStudio when first opened. When referring to RStudio (and equivalently RSTudio Cloud - this is the last time I’ll mention this so hopefully get get the point), there are two terms that need to be understood. As shown in Figure 3, there is 1)the console section of RStudio and 2) the script editor or source viewer. (#fig:rstudio.console)RStudio’s console and script editor. (A “cheat sheet” called the “RStudio IDE Cheat Sheet” details all of RStudio’s many features and is available at https://www.rstudio.com/resources/cheatsheets/ . It very thorough, though a bit dense. I don’t recommend it for beginners but you should remember that it exists.) 5.4.1 The console versus the script editor You can type and enter text into both the console and the script editor (also called the source viewer. The console, however, responds actively like a calculator, while the script editor works more like a text editor. Information can be passes unidirectionally from the script editor to the console, but not the other way. 5.4.1.1 The R console The console in RStudio gives you interactive programming environment that is very similar to a scientific calculator. If you click your mouse inside the console and type 1 + 1 then press enter you will see the following type of output 1 + 1 ## [1] 2 Note that right in front of where you typed 1+1 there is a &gt; symbol. This is always in the R console and never needs to be typed. You may occasionally see it printed in books or on websites, but it doesn’t ever need to be typed. One thing to note about R is that it’s not particular about spacing. All of the following things will yield the same results 1+1 1 + 1 1 + 1 1 + 1 Got it? Awesome! Now we’re ready for some real data analysis. "]]
